class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        def dfs(self,grid,visited,i,j,m,n):
            visited[i][j]=True
            if j+1<m and grid[i][j+1]=="1" and visited[i][j+1]==False:
                dfs(self,grid,visited,i,j+1,m,n)
            if j-1>=0 and grid[i][j-1]=="1" and visited[i][j-1]==False:
                dfs(self,grid,visited,i,j-1,m,n)
            if i+1<n and grid[i+1][j]=="1" and visited[i+1][j]==False:
                dfs(self,grid,visited,i+1,j,m,n)
            if i-1>=0 and grid[i-1][j]=="1" and visited[i-1][j]==False:
                dfs(self,grid,visited,i-1,j,m,n)

        m=len(grid[0])
        n=len(grid)
        visited=[[False for i in range(m)]for j in range(n)]
        count=0
        for i in range(n):
            for j in range(m):
                if visited[i][j]==False and grid[i][j]=="1":
                    dfs(self,grid,visited,i,j,m,n)
                    count+=1
        return count
